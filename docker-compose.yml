services:
  meters-collector:
    build: .
    image: meters-collector
    container_name: meters-collector
    restart: always
    depends_on:
      - mysql
    ports:
      - "80:80"
    volumes:
      - /var/meters-collector:/var/log/spring

  mysql:
    image: mysql:latest
    container_name: mysql
    volumes:
      - /var/meters-collector/mysql:/var/lib/mysql
      - /var/meters-collector/my.cnf:/etc/mysql/my.cnf
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: meters
      MYSQL_USER: meters
      MYSQL_PASSWORD: meters

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: always
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    depends_on:
      - meters-collector
    ports:
      - "9090:9090"
    volumes:
      - /var/meters-collector/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /var/meters-collector/prometheus:/prometheus
    command:
      - '--storage.tsdb.retention.time=90d'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - /var/meters-collector/grafana:/var/lib/grafana
    environment:
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=komex16.kometa.hu:25
      - GF_SMTP_SKIP_VERIFY=true
      - GF_SMTP_FROM_NAME=Meters Collector
      - GF_SMTP_FROM_ADDRESS=meters.collector@kometa.hu
      - GF_SERVER_DOMAIN=10.0.10.64

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - /var/meters-collector/influxdb/data:/var/lib/influxdb2
      - /var/meters-collector/influxdb/config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin12345
      - DOCKER_INFLUXDB_INIT_ORG=kometa
      - DOCKER_INFLUXDB_INIT_BUCKET=cooking-chambers

  # mosquitto:
  #   image: eclipse-mosquitto:latest
  #   container_name: mosquitto
  #   ports:
  #     - "1883:1883"
  #     - "9001:9001"
  #   volumes:
  #     - /var/meters-collector/mosquitto/data:/mosquitto/data
  #     - /var/meters-collector/mosquitto/config:/mosquitto/config
  #     - /var/meters-collector/mosquitto/log:/mosquitto/log

  # telegraf:
  #   image: telegraf:latest
  #   container_name: telegraf
  #   depends_on:
  #     - mosquitto
  #     - influxdb
  #   volumes:
  #     - /var/meters-collector/telegraf.conf:/etc/telegraf/telegraf.conf:ro

  nodered:
    image: nodered/node-red:latest
    container_name: nodered
    ports:
      - "1880:1880"
    volumes:
      - /var/meters-collector/nodered:/data
    environment:
      - TZ=Europe/Budapest
