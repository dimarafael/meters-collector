services:
  meters-collector:
    build: .
    image: meters-collector
    container_name: meters-collector
    restart: unless-stopped
    depends_on:
      - mysql
    ports:
      - "80:80"
    volumes:
      - /var/meters-collector:/var/log/spring

  mysql:
    image: mysql:latest
    container_name: mysql
    volumes:
      - /var/meters-collector/mysql:/var/lib/mysql
      - /var/meters-collector/my.cnf:/etc/mysql/my.cnf
    restart: unless-stopped
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: meters
      MYSQL_USER: meters
      MYSQL_PASSWORD: meters

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    depends_on:
      - meters-collector
    ports:
      - "9090:9090"
    volumes:
      - /var/meters-collector/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - /var/meters-collector/prometheus:/prometheus
    command:
      - '--storage.tsdb.retention.time=32d'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "3000:3000"
    volumes:
      - /var/meters-collector/grafana:/var/lib/grafana
